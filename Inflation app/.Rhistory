names(inf) <- c("region","year","inflation")
View(inf)
View(inflation)
names(inflatio)
inflation
colnames(inflation)
colnames(inflation)<-c(1980,2022)
colnames(inflation)
colnames(inflation)<-c(1980:2022)
colnames(inflation)
inflation <- read_excel("inflation.xls")
colnames(inflation)
colnames(inflation)<-c(1980:2022)
colnames(inflation)
inflation <- read_excel("inflation.xls")
View(inflation)
require(shinydashboard)
require(ggplot2)
require(dplyr)
require(highcharter) #to plot amazing time series plots
library(readxl)
require(tidyr)
inflation <- read_excel("inflation.xls")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
inf<-inflation %>% gather(as.integer(year),key = "Year",value="InflationRate")
View(inf)
View(inflation)
?gather
View(inflation)
inflation <- read_excel("inflation.xls")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
year
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
colnames(inflation)
colnames(inflation)[2:44]
colnames(inflation)[2:44]<-as.character(c(1980:2022))
colnames(inflation)
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
colnames(inflation)[2:44]<-as.integer(c(1980:2022))
colnames(inflation)
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
year<-c(1980:2022) #making a vector consisting of all years
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
inf<-inflation[,2:44] %>% gather(year,key = "Year",value="InflationRate")
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation[,2:44] %>% gather(year,key = "Year",value="InflationRate")
inflation[,2:44]
View(inflation[,2:44])
inf<-as.data.frame(inflation[,2:44]) %>% gather(year,key = "Year",value="InflationRate")
str(inflation)
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-as.data.frame(inflation[,2:44]) %>% gather(year,key = "Year",value="InflationRate")
melt(inflation)
library(reshape2)
melt(inflation)
install.packages("reshape")
melt(inflation,id=inflation$`Inflation rate, average consumer prices (Annual percent change)`)
melt(inflation,id=Inflation rate, average consumer prices (Annual percent change)
names(inf)<-c("region","year","inflation")
inf$year<-as.integer(inf$year)
India<-filter(inf,region=="India")
India$inflation<-as.numeric(India$inflation)
India$year<-as.numeric(India$year)
China<-filter(inf,region=="China, People's Republic of")
Ger<-filter(inf,region=="Germany")
Japan<-filter(inf,region=="Japan")
US<-filter(inf,region=="United States")
EU<-filter(inf,region=="European Union")
UK<-filter(inf,region=="United Kingdom")
Fr<-filter(inf,region=="France")
uae<-filter(inf,region=="United Arab Emirates")
server <- function(input, output) {
output$hcontainer <- renderHighchart ({
#if(input$country==inf$region)
#{
df<-inf %>% filter(region==input$country)#making is the dataframe of the country
df$inflation<-as.numeric(df$inflation)
df$year<-as.numeric(df$year)
#plotting the data
hchart(df, "line",color="#DC270C",hcaes(x=year,y=inflation))  %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
#to add 3-d effects
#hc_chart(type = "column",
#options3d = list(enabled = TRUE, beta = 15, alpha = 15))
})
output$hc2<-renderHighchart({
highchart() %>%
hc_xAxis(categories=inf$year) %>%
hc_add_series(name = "India", data = India$inflation) %>%
hc_add_series(name = "USA", data = US$inflation) %>%
hc_add_series(name = "UK", data = UK$inflation) %>%
hc_add_series(name = "China", data = China$inflation) %>%
hc_add_series(name = "Germany", data = Ger$inflation) %>%
hc_add_series(name="Japan",data=Japan$inflation) %>%
#to add colors
hc_colors(c("red","blue","green","purple","darkpink","orange")) %>%
hc_add_theme(hc_theme_elementary())
})
output$hc3<-renderHighchart({
union<-inf %>% filter(region==input$region)
union$year<-as.numeric(union$year)
union$inflation<-as.numeric(union$inflation)
#plotting
hchart(union,hcaes(x=year,y=inflation),type="area",color="#2B1F97") %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates for Economic Unions",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
})
output$hc4<-renderHighchart({
world<-inf %>% filter(region=="World")
world$year<-as.numeric(world$year)
world$inflation<-as.numeric(world$inflation)
#plotting the plot
hchart(world,hcaes(x=year,y=inflation),type="area",color="#B915A3") %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates for World",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
})
}
melt(inflation,id="Inflation rate, average consumer prices (Annual percent change")
library(shinydashboard)
require(shiny)
require(highcharter)
country<-c("India","United States","Mexico","Canada","China, People's Republic of","Japan","Russian Federation","Germany","United Kingdom","European Union",
"ASEAN-5","New Zealand","Australia","Netherlands","Luxembourg",
"France","Qatar","United Arab Emirates","Saudi Arabia")
unions<-c("Major advanced economies (G7)","European Union","Emerging and Developing Europe","ASEAN-5","Commonwealth of Independent States",
"Emerging and Developing Asia","Latin America and the Caribbean",
"Middle East, North Africa, Afghanistan, and Pakistan")
dashboardPage(
#defines header
skin = "red",
#header of the dashboard
dashboardHeader(
title="Inflation Rates" ,
dropdownMenu()
),
#defines sidebar of the dashboard
dashboardSidebar(
sidebarMenu(
#the sidebar menu items
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("About", tabName = "about", icon = icon("th")),
menuItem("Trade Unions",tabName="unions",icon=icon("signal")),
menuItem("World",tabName="world",icon=icon("globe"))
)),
#defines the body of the dashboard
dashboardBody(
#to add external CSS
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "custom.css")
),
tabItems(
#First TAB Menu-dashboard- first argument should be the 'tabName' value of the menuItem function
tabItem(tabName = "dashboard",
fluidRow(
column(12,
#box() is similar to a 'div' element in HTML
box(
selectInput("country",label="Select Country",choices=country), width = 12)# end box
),#end column
#box for plotting the time series plot
column(12,
box(
#below function is used to define a highcharter output plot which will be made in the server side
highchartOutput("hcontainer"),
width="12") #end box2
), #end column
br(), #line break
h4("Relative inflation rates time series plot",align="center"),
br(),
column(12,
box(highchartOutput("hc2"),width=12))
),#end row
h4("Made with love from", strong("Anish Singh Walia")),
a("R code for this project",target="_blank",href="https://github.com/anishsingh20/Analzying-Inflation-Rates-Worldwide")
),
#second tab menu- ABOUT
tabItem(tabName="about",
h2("What is Inflation ?",style="text-align:center"),
br(),
br(),
box(width=12,height="400px",
p(style="font-size:20px",strong("Inflation"),"rates are the general rate at which price of the goods and services within a particular economy are rising and the purchasing power of the currency is declining due to the higher priced goods. High inflation is definitely not good for an economy because it will always reduce the value for money.In general central banks of an economy tries to and work towards reducing the inflation rate and avoiding deflation."),
p(style="font-size:20px",strong("Deflation"), "is opposite of inflation. Deflation occurs when the inflation rates become negative or are below 0. Deflation is more harmful and dangerous for an economy because it means that the prices of goods and services are going to decrease. Now, this sounds amazing for consumers like us. But what actually happens is that the demand for goods and services have declined over a long term of time.
This directly indicates that a recession is on its way. This brings job losses, declining wages and a big hit to the stock portfolio. Deflation slows economy's growth. As prices fall, people defer(postpone) purchases in hope of a better lower price deal. Due to this companies and firms have to cut down the cost of their goods and products which directly affects the wages of the employees which have to be lowered.")
)
),
tabItem(tabName = "unions", h3("Time series of Inflation rates of Economic trade unions",align="center") ,
fluidRow(
column(12,
box(selectInput("region",label="Select Economic Region",choices=unions),width = 12)
),
box(highchartOutput("hc3"), width=12)
)# end row
),
tabItem(tabName = "world",
h3("World's Inflation Rates",align="center") ,
box(highchartOutput("hc4"), width=12)
)
)#end tabitems
)#end body
)#end dashboard
inflation <- read_excel("inflation.xls")
warning()
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-as.data.frame(inflation )%>% gather(year,key = "Year",value="InflationRate")
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
require(tidyr)
library(tidyr)
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
library(dplyr)
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
require(shinydashboard)
require(ggplot2)
library(dplyr)
require(highcharter) #to plot amazing time series plots
library(readxl)
library(tidyr)
inflation <- read_excel("inflation.xls")
library(reshape)
year<-c(1980:2022) #making a vector consisting of all years
library(readxl)
library(tidyr)
inflation <- read_excel("inflation.xls")
year<-c(1980:2022) #making a vector consisting of all years
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
inf<-inflation%>% gather(as.data.frame(year),key = "Year",value="InflationRate")
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation%>% gather(as.data.frame(year),key = "Year",value="InflationRate")
inf<-na.omit(inf) #omitting NA values
names(inf)<-c("region","year","inflation")
View(inf)
year
inf<- gather(inflation,key = "Year",value="InflationRate")
inf<-na.omit(inf) #omitting NA values
View(inf)
inf<- gather(year,key = "Year",value="InflationRate")
inf<- gather(key = "Year",year,value="InflationRate")
inf<- gather(year,key = "Year",value="InflationRate")
runApp()
inflation <- read_excel("inflation.xls")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<- gather(year,key = "Year",value="InflationRate")
inf<-na.omit(inf) #omitting NA values
require(shinydashboard)
require(ggplot2)
library(dplyr)
require(highcharter) #to plot amazing time series plots
library(tidyr)
library(readxl)
inflation <- read_excel("inflation.xls")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<- gather(year,key = "Year",value="InflationRate")
inflation <- read_excel("inflation.xls")
colnames(inflation)
colnames(inflation)[1]
is.charactercolnames(inflation)[2]
is.character(colnames(inflation)[2])
colnames(inflation)[2:44]<-as.character(c(1980:2022))
colnames(inflation)
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<- inflation %>%gather(year,key = "Year",value="InflationRate")
inf<- inflation %>%gather(as.character(year),key = "Year",value="InflationRate")
inf<- inflation %>% gather(year,key = "Year",value="InflationRate")
inf<- gather(inflation,year,key = "Year",value="InflationRate")
inf<- gather(inflation,1980,key = "Year",value="InflationRate")
inf<- gather(inflation,"1980",key = "Year",value="InflationRate")
inf<- gather(inflation,colnames(inflation[,2:44]),key = "Year",value="InflationRate")
inf<- gather(inflation,select(year),key = "Year",value="InflationRate")
inf<- gather(inflation,select_(year),key = "Year",value="InflationRate")
inf<- gather(inflation,select_(year),key = "Year",value="InflationRate")
inf<- gather(inflation,key = "Year",value="InflationRate")
View(inf)
inf<- gather(inflation,c(1980:2022),key = "Year",value="InflationRate")
inf<- gather(inflation,.dots=year,key = "Year",value="InflationRate")
inf<- gather(inflation,.dots="year",key = "Year",value="InflationRate")
inf<- gather(inflation,"year",key = "Year",value="InflationRate")
names(year)
inflation <- read_excel("inflation.xls")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<- gather(inflation,year,key = "Year",value="InflationRate")
year
inf<-inflation %>% gather(year,key = "Year",value="InflationRate")
inf<-inflation[,2:44] %>% gather(year,key = "Year",value="InflationRate")
inf<-inflation[,2 %>% gather(year,key = "Year",value="InflationRate")
inf<-na.omit(inf) #omitting NA values
year
names(inf)<-c("region","year","inflation")
inf$year<-as.integer(inf$year)
India<-filter(inf,region=="India")
India$inflation<-as.numeric(India$inflation)
India$year<-as.numeric(India$year)
China<-filter(inf,region=="China, People's Republic of")
Ger<-filter(inf,region=="Germany")
Japan<-filter(inf,region=="Japan")
US<-filter(inf,region=="United States")
EU<-filter(inf,region=="European Union")
UK<-filter(inf,region=="United Kingdom")
Fr<-filter(inf,region=="France")
uae<-filter(inf,region=="United Arab Emirates")
server <- function(input, output) {
output$hcontainer <- renderHighchart ({
#if(input$country==inf$region)
#{
df<-inf %>% filter(region==input$country)#making is the dataframe of the country
df$inflation<-as.numeric(df$inflation)
df$year<-as.numeric(df$year)
#plotting the data
hchart(df, "line",color="#DC270C",hcaes(x=year,y=inflation))  %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
#to add 3-d effects
#hc_chart(type = "column",
#options3d = list(enabled = TRUE, beta = 15, alpha = 15))
})
output$hc2<-renderHighchart({
highchart() %>%
hc_xAxis(categories=inf$year) %>%
hc_add_series(name = "India", data = India$inflation) %>%
hc_add_series(name = "USA", data = US$inflation) %>%
hc_add_series(name = "UK", data = UK$inflation) %>%
hc_add_series(name = "China", data = China$inflation) %>%
hc_add_series(name = "Germany", data = Ger$inflation) %>%
hc_add_series(name="Japan",data=Japan$inflation) %>%
#to add colors
hc_colors(c("red","blue","green","purple","darkpink","orange")) %>%
hc_add_theme(hc_theme_elementary())
})
output$hc3<-renderHighchart({
union<-inf %>% filter(region==input$region)
union$year<-as.numeric(union$year)
union$inflation<-as.numeric(union$inflation)
#plotting
hchart(union,hcaes(x=year,y=inflation),type="area",color="#2B1F97") %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates for Economic Unions",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
})
output$hc4<-renderHighchart({
world<-inf %>% filter(region=="World")
world$year<-as.numeric(world$year)
world$inflation<-as.numeric(world$inflation)
#plotting the plot
hchart(world,hcaes(x=year,y=inflation),type="area",color="#B915A3") %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates for World",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
})
}
inf<-inflation[,2] %>% gather(year,key = "Year",value="InflationRate")
inf<-inflation[2,2] %>% gather(year,key = "Year",value="InflationRate")
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
str(inflation)
colnames(inflation)[2:44]<-as.character(c(1980:2022))
colnames(inflation)
str(inflation)
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
year
year<-as.character.Date(year)#converting to character type to use in gather()
colnames(inflation)[2:44]<-as.character.d(c(1980:2022))
colnames(inflation)[2:44]<-as.character.Date(c(1980:2022))
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character.Date(year)#converting to character type to use in gather()
year<-as.character.Date(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
View(inflation)
year<-c(1979:2022) #making a vector consisting of all years
year<-as.character.Date(year)#converting to character type to use in gather()
year<-as.character.Date(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
colnames(inflation)[2:44]<-as.character(c(1980:2022))
inflation <- read_excel("inflation.xls")
install.packages("tidyr")
install.packages("dplyr")
inflation <- read_excel("inflation.xls")
require(shinydashboard)
require(ggplot2)
library(dplyr)
require(highcharter) #to plot amazing time series plots
library(readxl)
library(tidyr)
inflation <- read_excel("inflation.xls")
year<-c(1979:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
colnames(inflation)[2:44]<-as.character(c(1980:2022))
colnames(inflation)
year<-c(1980:2022) #making a vector consisting of all years
year<-as.character(year)#converting to character type to use in gather()
inf<-inflation%>% gather(year,key = "Year",value="InflationRate")
inf<-na.omit(inf) #omitting NA values
View(inf)
names(inf)<-c("region","year","inflation")
inf$year<-as.integer(inf$year)
India<-filter(inf,region=="India")
India$inflation<-as.numeric(India$inflation)
India$year<-as.numeric(India$year)
China<-filter(inf,region=="China, People's Republic of")
Ger<-filter(inf,region=="Germany")
Japan<-filter(inf,region=="Japan")
US<-filter(inf,region=="United States")
EU<-filter(inf,region=="European Union")
UK<-filter(inf,region=="United Kingdom")
Fr<-filter(inf,region=="France")
uae<-filter(inf,region=="United Arab Emirates")
server <- function(input, output) {
output$hcontainer <- renderHighchart ({
#if(input$country==inf$region)
#{
df<-inf %>% filter(region==input$country)#making is the dataframe of the country
df$inflation<-as.numeric(df$inflation)
df$year<-as.numeric(df$year)
#plotting the data
hchart(df, "line",color="#DC270C",hcaes(x=year,y=inflation))  %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
#to add 3-d effects
#hc_chart(type = "column",
#options3d = list(enabled = TRUE, beta = 15, alpha = 15))
})
output$hc2<-renderHighchart({
highchart() %>%
hc_xAxis(categories=inf$year) %>%
hc_add_series(name = "India", data = India$inflation) %>%
hc_add_series(name = "USA", data = US$inflation) %>%
hc_add_series(name = "UK", data = UK$inflation) %>%
hc_add_series(name = "China", data = China$inflation) %>%
hc_add_series(name = "Germany", data = Ger$inflation) %>%
hc_add_series(name="Japan",data=Japan$inflation) %>%
#to add colors
hc_colors(c("red","blue","green","purple","darkpink","orange")) %>%
hc_add_theme(hc_theme_elementary())
})
output$hc3<-renderHighchart({
union<-inf %>% filter(region==input$region)
union$year<-as.numeric(union$year)
union$inflation<-as.numeric(union$inflation)
#plotting
hchart(union,hcaes(x=year,y=inflation),type="area",color="#2B1F97") %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates for Economic Unions",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
})
output$hc4<-renderHighchart({
world<-inf %>% filter(region=="World")
world$year<-as.numeric(world$year)
world$inflation<-as.numeric(world$inflation)
#plotting the plot
hchart(world,hcaes(x=year,y=inflation),type="area",color="#B915A3") %>%
hc_exporting(enabled = TRUE) %>%
hc_tooltip(crosshairs = TRUE, backgroundColor = "#FCFFC5",
shared = TRUE, borderWidth = 2) %>%
hc_title(text="Time series plot of Inflation Rates for World",align="center") %>%
hc_subtitle(text="Data Source: IMF",align="center") %>%
hc_add_theme(hc_theme_elementary())
})
}
shiny::runApp()
shiny::runApp()
runApp()
runApp('C:/Users/lt32132/Downloads/MyShinyApp')
