runApp()
runApp()
library(scales)
runApp()
runApp()
names(iris)
iris("Sepal.Length")
iris["Sepal.Length"]
runApp()
iris[,"Sepal.Length"]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
library(rsconnect)
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
shiny::runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
getwd()
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
write.csv(UScereal)
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
UScereal
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
write.table(decathlon,file="decathlon.csv",row.names=FALSE,col.names=TRUE,sep=";")
write.table(UScereal,file="decathlon.csv",row.names=FALSE,col.names=TRUE,sep=";")
write.table(UScereal,file="UScereal.csv",row.names=FALSE,col.names=TRUE,sep=";")
write.table(decathlon,file="decathlon.csv",row.names=FALSE,col.names=TRUE,sep=";")
write.table(iris,file="iris.csv",row.names=FALSE,col.names=TRUE,sep=";")
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
getwd
getwd()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE'
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE'
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
data()
agriculture
animals
chorSub
flower
plantTraits
pluton
ruspini
votes.repub
xclara
dogs
library(ClustOfVar)
dogs
flower
ClustOfVar::dogs
gironde
gironde
AirPassengers
BJsales
BJsales.lead (BJsales
BJsales.lead (BJsales)
Orange
co2
euro
mtcars
stackloss
sunspot.month
runApp()
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
shiny::runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
res.pca = PCA(iris,scale.unit = T,quanti.sup =p,quali.sup =5 , graph = FALSE)
PCA()
iris
res.pca = PCA(iris,scale.unit = T,quali.sup =5 , graph = FALSE)
PCA()
runApp()
runApp()
res.pca = PCA(aa,scale.unit = T,quali.sup =5 , graph = FALSE)
eig.val <- get_eigenvalue(res.pca)
eig.val
res.pca = PCA(aa,scale.unit = T,quali.sup =5 , graph = FALSE)
eig.val <- get_eigenvalue(res.pca)
var <- get_pca_var(res.pca)
eig.val <- get_eigenvalue(res.pc)
is.null(eig.val)
is.atomic(eig.val)
res.pc = PCA(iris,scale.unit = T,quali.sup =5 , graph = FALSE)
eig.val <- get_eigenvalue(res.pc)
var <- get_pca_var(res.pca)
is.atomic(eig.val)
res.pc = PCA(aa,scale.unit = T,quali.sup =5 , graph = FALSE)
eig.val <- get_eigenvalue(res.pc)
eig.val
res.pc = PCA(aa,scale.unit = T,quali.sup =5 , graph = FALSE)
eig.val <- get_eigenvalue(res.pc)
var <- get_pca_var(res.pca)
is.atomic(eig.val)
is.null(is.atomic(eig.val))
is.empty.model(eig.val)
res.pc = PCA(aa,scale.unit = T,quali.sup =5 , graph = FALSE)
eig.val <- get_eigenvalue(res.pc)
var <- get_pca_var(res.pca)
is.empty.model(eig.val)
is.infinite(eig.val)
runApp()
runApp()
res.pc = PCA(aa,scale.unit = T,quali.sup =5 , graph = FALSE)
is.null(res.pc)
is.expression(res.pc)
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='nackachy',
token='0C80B65BD9A47F5BFBD051CDAFBBBAE6',
secret='dS1SlGLXZP5Sqx0VJV9tff8ApSoeqslWC1qMxtjE')
rsconnect::deployApp('C:/Users/Lenovo/Desktop/chiheb/3eme/projet shiny/Chiheb Nakkachi')
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github("AnalytixWare/ShinySky")
library(shiny); runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
library(shiny); runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
runApp('C:/Users/Lenovo/Downloads/ShinyApp.R')
shiny::runApp()
if(!require(datasets)) { install.packages("datasets"); require(datasets)}
if(!require(dplyr)) { install.packages("dplyr"); require(dplyr)}
if(!require(sunburstR)) { install.packages("sunburstR"); require(sunburstR)}
if(!require(reshape2)) { install.packages("reshape2"); require(reshape2)}
if(!require(wordcloud)) { install.packages("wordcloud"); require(wordcloud)}
if(!require(plotly)) { install.packages("plotly"); require(plotly)}
if(!require(shiny)) { install.packages("shiny"); require(shiny)}
if(!require(ggplot2)) { install.packages("ggplot2"); require(ggplot2)}
if(!require(ggpubr)) { install.packages("ggpubr"); require(ggpubr)}
if(!require(flexdashboard)) { install.packages("flexdashboard"); require(flexdashboard)}
if(!require(maptools)) { install.packages("maptools"); require(maptools)}
if(!require(sp)) { install.packages("sp"); require(sp)}
if(!require(shapefiles)) { install.packages("shapefiles"); require(shapefiles)}
if(!require(DT)) { install.packages("DT"); require(DT)}
if(!require(doBy)) { install.packages("doBy"); require(doBy)}
library(datasets)
library(dplyr)
library(sunburstR)
library(reshape2)
library(wordcloud)
library(plotly)
library(shiny)
library(ggplot2)
library(ggpubr)
library(flexdashboard)
library(maptools)
library(sp)
library(shapefiles)
library(DT)
library(doBy)
fdc <- readShapePoly("Tunisie_snuts4.shp")
data_del <- read.csv("tunisie_data_del_2011.csv", header = TRUE, sep = ";", dec = ",", encoding = "latin1")
regions <- as.data.frame(data_del[,c("gou_nom", "reg_nom")])
regions <- unique(regions)
regions <- as.data.frame(apply(regions, 2, as.factor))
names(regions) <- c( "REGION", "District")
library(plyr)
regions$REGION<-revalue(regions$REGION, c("Manubah"="Manouba", "Medenine"="Mednine", "Sidi Bou Zid"="Sidi Bou Zid"))
names(regions) <- c( "REGION", "District")
data <- read.csv("Book1.csv", header = T, sep = ";")
data <- merge(data, regions, by ="REGION")
data_work <- data[,c( "District", "REGION", "URBRUR","Q3A", "Q46A", "Q46B", "Q46D", "Q97", "Q23", "Q24", "Q73C_ARB", "Q60C", "Q65K", "Q85C", "Q63PT1", "THISINT")]
data_work$Q46A <- as.numeric(data_work$Q46A)
data_work$Q46B <- as.numeric(data_work$Q46B)
data_work$Q46D <- as.numeric(data_work$Q46D)
data_work$REGION <- as.factor(data_work$REGION)
data_work <- as.data.frame(apply(data_work, 2, as.factor))
pt <- cbind(fdc@data[, "id"], as.data.frame(coordinates(fdc)))
colnames(pt) <- c("id", "x", "y")
i=match(pt[, "id"], data_del[, "del"])
pt <- data.frame(pt, data_del[i, ])
pt$var <- pt$POPTO2010
pop_gouv <- tapply(pt[,"var"], pt$gou_nom, sum)
pop_gouv_max <- pop_gouv[which.max(pop_gouv)]
pop_gouv_min <- pop_gouv[which.min(pop_gouv)]
renderValueBox({
pop_gouv <- tapply(pt[,"var"], pt$gou_nom, sum)
pop_gouv_max <- pop_gouv[which.max(pop_gouv)]
valueBox(
value = 163610,
icon = " fa fa-adjust",
color = "#4682B4"
)
})
renderValueBox({
sum <- sum(pt$var)
valueBox(
value = sum,
icon = "fa fa-group",
color = "#D2B48C"
)
})
renderValueBox({
hhh <- pt[which.max(pt$var),"var"]
valueBox(
value = hhh,
icon = "fa fa-user-plus",
color = "#008080"
)
})
renderValueBox({
hhh2 <- pt[which.min(pt$var),"var"]
valueBox(
value = hhh2,
icon = "fa fa-user",
color = "#F5DEB3"
)
})
renderValueBox({
pop_gouv <- tapply(pt[,"var"], pt$gou_nom, sum)
pop_gouv_max <- pop_gouv[which.max(pop_gouv)]
valueBox(
value = pop_gouv_max,
icon = "fa fa-user-plus",
color = "#31AC9B"
)
})
renderValueBox({
pop_gouv <- tapply(pt[,"var"], pt$gou_nom, sum)
pop_gouv_min <- pop_gouv[which.min(pop_gouv)]
valueBox(
value = pop_gouv_min,
icon = "fa fa-user",
color = "#E6DC9E"
)
})
renderPlot({
x1 <- bbox(fdc)[1]
y1 <- bbox(fdc)[2]
x2 <- bbox(fdc)[3]
y2 <- bbox(fdc)[4]
M <- (x2 - x1) * (y2 - y1)
sc <- sum(pt$var, na.rm = TRUE)
k <- 0.2
pt$size <- sqrt((pt$var * k * M/sc)/pi)
plot(fdc, border = "white", col = "grey")
symbols(pt[, c("x", "y")], circles = pt$size, add = TRUE, bg = "red", inches = FALSE)
LegTitle <- "Popuplation"
rLeg <- quantile(pt$size, c(1, 0.9, 0.25, 0), type = 1, na.rm = TRUE);rLeg
rVal <- quantile(pt$var, c(1, 0.9, 0.25, 0), type = 1, na.rm = TRUE);rVal
l <- data.frame(x = x1, y = y1)
head(l)
xinit <- l$x + rLeg[1]
xinit
ypos <- l$y + rLeg
ypos
symbols(x = rep(xinit, 4), y = ypos, circles = rLeg,add = TRUE, bg = "red", inches = FALSE)
text(x = rep(xinit, 4) + rLeg[1] * 1.2, y = (l$y + (2 * rLeg)), rVal, cex = 0.3, srt = 0, adj = 0)
for (i in 1:4) {
segments(xinit, (l$y + (2 * rLeg[i])), xinit + rLeg[1] * 1.1, (l$y + (2 * +rLeg[i]))) }
text(x = xinit - rLeg[1], y = (l$y + (2 * rLeg[1])), LegTitle, adj = c(0, 0), cex = 0.7)
title(main = "Population, 2010",  cex.sub = 0.7)
xscale <- x2
yscale <- y1
sizescale <- 50000
labelscale <- "50km"
SpatialPolygonsRescale(layout.scale.bar(), offset = c(xscale, yscale), scale = sizescale, fill = c("black"), plot.grid = F)
text(xscale + sizescale/2, yscale, paste(labelscale, "\n\n", sep = ""), cex = 0.7)
xarrow <- x1
yarrow <- y2 - (y2 - y1)/10
SpatialPolygonsRescale(layout.north.arrow(2), offset = c(xarrow, yarrow), scale = 50000, plot.grid = F)
})
shinyApp(
ui <- fluidPage(
titlePanel("Egalité Homme/Femme "),
sidebarLayout(
sidebarPanel(
selectInput("sexe", "Sexe :", choices = levels(data_work$THISINT)),
hr(),
helpText("Statement 1 : Les femmes doivent avoir les mêmes droits que l'homme."),
hr(),
helpText("Statement 2 : Les femmes ont toujours été soumises aux lois et coutumes traditionnelles et devraient rester ainsi.")
),
mainPanel(
plotlyOutput("discrimPlot", height = "100%"),
plotlyOutput("ecolePlot", height = "50%")
)
)
),
server = function(input, output) {
selectedData <- reactive({
as.data.frame(table(data_work[data_work$THISINT==input$sexe, "Q23"]))
})
selectedData2 <- reactive({
as.data.frame(table(data_work[data_work$THISINT==input$sexe, "Q24"]))
})
output$discrimPlot <- renderPlotly({
plot_ly(selectedData(), labels = selectedData()$Var1, values = selectedData()$Freq, type = "pie" ,marker=list(colors=c("#006291","#0073aa","#11b1ff","#59c9ff","#a8e2ff","#006291"))) %>%
layout(title = "Droit de la femme")
})
output$ecolePlot <- renderPlotly({
plot_ly(selectedData2(), labels = selectedData2()$Var1, values = selectedData2()$Freq, type = "pie" ,marker=list(colors=c("#006291","#0073aa","#11b1ff","#59c9ff","#a8e2ff","#006291"))) %>%
layout(title = "Les garçons sont prioritaires d'aller à l'école")
})
}
)
shiny::runApp()
shiny::runApp()
install.packages("shinysky")
install.packages("remotes")
install.packages("remotes")
install_github("AnalytixWare/ShinySky")
install_github("AnalytixWare/ShinySky")
library(shinysky)
install. packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
