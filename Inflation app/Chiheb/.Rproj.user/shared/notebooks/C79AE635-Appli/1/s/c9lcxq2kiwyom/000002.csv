"0","renderValueBox({"
"0","  pop_gouv <- tapply(pt[,""var""], pt$gou_nom, sum)"
"0","  pop_gouv_max <- pop_gouv[which.max(pop_gouv)]"
"0","  valueBox("
"0","    value = pop_gouv_max,"
"0","    icon = ""fa fa-user-plus"","
"0","    color = ""#31AC9B"""
"0","  )"
"0","})"
"1","function (...) 
"
"1","{
"
"1","    if (length(outputArgs) != 0 && !hasExecuted$get()) {
"
"1","        warning(""Unused argument: outputArgs. The argument outputArgs is only "", 
"
"1","            ""meant to be used when embedding snippets of Shiny code in an "", 
"
"1","            ""R Markdown code chunk (using runtime: shiny). When running a "", 
"
"1","            ""full Shiny app, please set the output arguments directly in "", 
"
"1","            ""the corresponding output function of your UI code."")
"
"1","        hasExecuted$set(TRUE)
"
"1","    }
"
"1","    if (is.null(formals(origRenderFunc))) 
"
"1","        origRenderFunc()
"
"1","    else origRenderFunc(...)
"
"1","}
"
"1","<environment: 0x00000000204e20a0>
"
"1","attr(,""class"")"
"1","
"
"1","[1]"
"1"," ""shiny.render.function"""
"1"," ""function""             "
"1","
"
"1","attr(,""outputFunc"")"
"1","
"
"1","function (outputId, width = ""100%"", height = ""160px"") 
"
"1","{
"
"1","    shiny::uiOutput(outputId, class = ""shiny-html-output shiny-valuebox-output"", 
"
"1","        width = width, height = height)
"
"1","}
"
"1","<environment: namespace:flexdashboard>
"
"1","attr(,""outputArgs"")"
"1","
"
"1","list()
"
"1","attr(,""hasExecuted"")"
"1","
"
"1","<Mutable>
  Public:
    clone: function (deep = FALSE) 
    get: function () 
    set: function (value) 
  Private:
    value: FALSE"
"1","
"
